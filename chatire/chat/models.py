from uuid import uuid4

from django.db import models
from django.contrib.auth import get_user_model

# Create your models here.
User = get_user_model();

def deserialize_user(user):
    """
    Deserialize user instance to JSON
    """
    return {
        'id': user.id, 
        'username': user.username,
        'email': user.email,
        'firstname': user.first_name, 
        'lastname': user.last_name
    }

class TrackableDateModel(models.Model):
    """
    Abstract method to track the creation/update date for the model
    """
    create_date = models.DateTimeField(auto_now_add=True)
    update_date = models.DateTimeField(auto_now=True)
    
    class Meta:
        abstract = True

def _generate_unique_url():
    """
    Generates a unique url for the chat session
    """
    return str(uuid4()).replace('-','')[:15]

class ChatSession(TrackableDateModel):
    """
    A chat session. uri are generated by taking the first 15 
    characters from a UUID
    """
    owner = models.ForeignKey(User, on_delete=models.PROTECT)
    uri = models.URLField(default=_generate_unique_url)

class ChatSessionMessage(TrackableDateModel):
    """
    Stores messages for a session
    """
    user = models.ForeignKey(User, on_delete=models.PROTECT)
    chat_session = models.ForeignKey(ChatSession, related_name='messages', on_delete=models.PROTECT)

    def to_json():
        """
        Deserialize message to json
        """
        return {
            'user':deserialize_user(self.user),
            'message': self.message
            }

class ChatSessionMember(TrackableDateModel):
    """
    Store all users in a chat session
    """
    chat_session = models.ForeignKey(ChatSession, related_name='members', on_delete=models.PROTECT)
    user = models.ForeignKey(User, on_delete=models.PROTECT)
